pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject() {
              openshift.startBuild("vote").logs('-f')
            }
          }
        }
      }
    }
    stage('Deploy') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject() {
              dc = openshift.selector("dc", "vote")
              dc.rollout().latest()
              timeout(10) {
                  dc.rollout().status("-w")
              }
            }
          }
        }
      }
    }
    stage('Test') {
    steps {
        sh(returnStdout: true, script: '''#!/bin/bash
            response=$(curl --write-out %{http_code} --silent --output /dev/null -XPOST http://vote:8080/ -d 'vote=a')
            if [[ response -ne 200 ]]; then
            exit 1
            fi
        '''.stripIndent())
    }
}
    
    stage('Promote to UAT') {
  steps {
    timeout(time:15, unit:'MINUTES') {
        input message: "Approve Promotion to UAT?", ok: "Promote"
    }
    script {
      openshift.withCluster() {
        openshift.tag("vote:latest", "vote:uat")
      }
    }
  }
}
  }
}