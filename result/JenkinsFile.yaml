pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject() {
              openshift.startBuild("result").logs('-f')
            }
          }
        }
      }
    }
    stage('Deploy') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject() {
              dc = openshift.selector("dc", "result")
              dc.rollout().latest()
              timeout(10) {
                  dc.rollout().status("-w")
              }
            }
          }
        }
      }
    }
    stage('Test') {
      steps {
        sh "curl -s http://result:4000/ | grep 'Cats vs Dogs -- Result'"
      }
    }
    stage('Promote to UAT') {
  steps {
    timeout(time:15, unit:'MINUTES') {
        input message: "Approve Promotion to UAT?", ok: "Promote"
    }
    script {
      openshift.withCluster() {
        openshift.tag("result:latest", "result:uat")
      }
    }
  }
}
  }
}